$date
	Mon May 23 17:15:27 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module testbench $end
$var reg 1 ! clk $end
$var reg 1 " rst_n $end
$var integer 32 # count [31:0] $end
$var integer 32 $ fp_w [31:0] $end
$scope module CPU $end
$var wire 1 ! clk_i $end
$var wire 1 " rst_i $end
$var wire 32 % SL1_o [31:0] $end
$var wire 1 & RegWrite $end
$var wire 32 ' RTdata_o [31:0] $end
$var wire 32 ( RSdata_o [31:0] $end
$var wire 1 ) PC_write $end
$var wire 32 * PC_o [31:0] $end
$var wire 32 + PC_i [31:0] $end
$var wire 32 , PC_Add_Immediate [31:0] $end
$var wire 32 - PC_Add4 [31:0] $end
$var wire 1 . MemtoReg $end
$var wire 1 / MemWrite $end
$var wire 1 0 MemRead $end
$var wire 8 1 MUX_control_o [7:0] $end
$var wire 32 2 MUXMemtoReg_o [31:0] $end
$var wire 1 3 MUXControl $end
$var wire 32 4 MUXALUSrc_o [31:0] $end
$var wire 3 5 MEMWB_WB_o [2:0] $end
$var wire 32 6 MEMWB_PC_Add4_o [31:0] $end
$var wire 5 7 MEMWB_Instr_11_7_o [4:0] $end
$var wire 32 8 MEMWB_DM_o [31:0] $end
$var wire 32 9 MEMWB_ALUresult_o [31:0] $end
$var wire 1 : Jump $end
$var wire 32 ; Imm_Gen_o [31:0] $end
$var wire 1 < IFID_Write $end
$var wire 32 = IFID_PC_o [31:0] $end
$var wire 32 > IFID_PC_Add4_o [31:0] $end
$var wire 32 ? IFID_Instr_o [31:0] $end
$var wire 32 @ IFID_Instr_i [31:0] $end
$var wire 1 A IFID_Flush $end
$var wire 3 B IDEXE_WB_o [2:0] $end
$var wire 32 C IDEXE_RTdata_o [31:0] $end
$var wire 32 D IDEXE_RSdata_o [31:0] $end
$var wire 32 E IDEXE_PC_add4_o [31:0] $end
$var wire 2 F IDEXE_Mem_o [1:0] $end
$var wire 32 G IDEXE_Instr_o [31:0] $end
$var wire 4 H IDEXE_Instr_30_14_12_o [3:0] $end
$var wire 5 I IDEXE_Instr_11_7_o [4:0] $end
$var wire 32 J IDEXE_ImmGen_o [31:0] $end
$var wire 3 K IDEXE_Exe_o [2:0] $end
$var wire 2 L ForwardB [1:0] $end
$var wire 2 M ForwardA [1:0] $end
$var wire 1 N EXEMEM_Zero_o $end
$var wire 3 O EXEMEM_WB_o [2:0] $end
$var wire 32 P EXEMEM_RTdata_o [31:0] $end
$var wire 32 Q EXEMEM_PC_Add4_o [31:0] $end
$var wire 2 R EXEMEM_Mem_o [1:0] $end
$var wire 32 S EXEMEM_Instr_o [31:0] $end
$var wire 5 T EXEMEM_Instr_11_7_o [4:0] $end
$var wire 32 U EXEMEM_ALUResult_o [31:0] $end
$var wire 32 V DM_o [31:0] $end
$var wire 1 W Branch_zero $end
$var wire 1 X Branch $end
$var wire 1 Y ALU_zero $end
$var wire 4 Z ALU_Ctrl_o [3:0] $end
$var wire 32 [ ALUSrc2_o [31:0] $end
$var wire 32 \ ALUSrc1_o [31:0] $end
$var wire 1 ] ALUSrc $end
$var wire 32 ^ ALUResult [31:0] $end
$var wire 2 _ ALUOp [1:0] $end
$scope module ALU_Ctrl $end
$var wire 2 ` ALUOp [1:0] $end
$var wire 4 a instr [3:0] $end
$var wire 3 b func3 [2:0] $end
$var reg 4 c ALU_Ctrl_o [3:0] $end
$upscope $end
$scope module Branch_Adder $end
$var wire 32 d src2_i [31:0] $end
$var wire 32 e src1_i [31:0] $end
$var reg 32 f sum_o [31:0] $end
$upscope $end
$scope module Data_Memory $end
$var wire 1 g MemRead_i $end
$var wire 1 h MemWrite_i $end
$var wire 1 ! clk_i $end
$var wire 32 i data_o [31:0] $end
$var wire 32 j data_i [31:0] $end
$var wire 32 k addr_i [31:0] $end
$var integer 32 l i [31:0] $end
$upscope $end
$scope module Decoder $end
$var wire 7 m opcode [6:0] $end
$var wire 32 n instr_i [31:0] $end
$var wire 1 W branch_i $end
$var reg 2 o ALUOp [1:0] $end
$var reg 1 ] ALUSrc $end
$var reg 1 X Branch $end
$var reg 1 A Flush $end
$var reg 1 : Jump $end
$var reg 1 0 MemRead $end
$var reg 1 / MemWrite $end
$var reg 1 . MemtoReg $end
$var reg 1 & RegWrite $end
$upscope $end
$scope module EXEtoMEM $end
$var wire 1 ! clk_i $end
$var wire 1 " rst_i $end
$var wire 1 Y zero_i $end
$var wire 32 p rtdata_i [31:0] $end
$var wire 32 q pc_add4_i [31:0] $end
$var wire 32 r instr_i [31:0] $end
$var wire 32 s alu_ans_i [31:0] $end
$var wire 5 t WBreg_i [4:0] $end
$var wire 3 u WB_i [2:0] $end
$var wire 2 v Mem_i [1:0] $end
$var reg 2 w Mem_o [1:0] $end
$var reg 3 x WB_o [2:0] $end
$var reg 5 y WBreg_o [4:0] $end
$var reg 32 z alu_ans_o [31:0] $end
$var reg 32 { instr_o [31:0] $end
$var reg 32 | pc_add4_o [31:0] $end
$var reg 32 } rtdata_o [31:0] $end
$var reg 1 N zero_o $end
$upscope $end
$scope module FWUnit $end
$var wire 2 ~ EXEMEM_RegWrite [1:0] $end
$var wire 5 !" IDEXE_RS1 [4:0] $end
$var wire 5 "" IDEXE_RS2 [4:0] $end
$var wire 2 #" MEMWB_RegWrite [1:0] $end
$var wire 5 $" MEMWB_RD [4:0] $end
$var wire 5 %" EXEMEM_RD [4:0] $end
$var reg 2 &" ForwardA [1:0] $end
$var reg 2 '" ForwardB [1:0] $end
$upscope $end
$scope module Hazard_detection_obj $end
$var wire 1 (" IDEXE_memRead $end
$var wire 5 )" IFID_regRs [4:0] $end
$var wire 5 *" IFID_regRt [4:0] $end
$var wire 5 +" IDEXE_regRd [4:0] $end
$var reg 1 < IFID_write $end
$var reg 1 ) PC_write $end
$var reg 1 3 control_output_select $end
$upscope $end
$scope module IDtoEXE $end
$var wire 3 ," Exe_i [2:0] $end
$var wire 2 -" Mem_i [1:0] $end
$var wire 3 ." WB_i [2:0] $end
$var wire 5 /" WBreg_i [4:0] $end
$var wire 4 0" alu_ctrl_instr [3:0] $end
$var wire 1 ! clk_i $end
$var wire 1 " rst_i $end
$var wire 32 1" pc_add4_i [31:0] $end
$var wire 32 2" instr_i [31:0] $end
$var wire 32 3" immgen_i [31:0] $end
$var wire 32 4" data2_i [31:0] $end
$var wire 32 5" data1_i [31:0] $end
$var reg 3 6" Exe_o [2:0] $end
$var reg 2 7" Mem_o [1:0] $end
$var reg 3 8" WB_o [2:0] $end
$var reg 5 9" WBreg_o [4:0] $end
$var reg 4 :" alu_ctrl_input [3:0] $end
$var reg 32 ;" data1_o [31:0] $end
$var reg 32 <" data2_o [31:0] $end
$var reg 32 =" immgen_o [31:0] $end
$var reg 32 >" instr_o [31:0] $end
$var reg 32 ?" pc_add4_o [31:0] $end
$upscope $end
$scope module IFtoID $end
$var wire 1 < IFID_write $end
$var wire 1 ! clk_i $end
$var wire 1 A flush $end
$var wire 1 " rst_i $end
$var wire 32 @" pc_add4_i [31:0] $end
$var wire 32 A" instr_i [31:0] $end
$var wire 32 B" address_i [31:0] $end
$var reg 32 C" address_o [31:0] $end
$var reg 32 D" instr_o [31:0] $end
$var reg 32 E" pc_add4_o [31:0] $end
$upscope $end
$scope module IM $end
$var wire 32 F" instr_o [31:0] $end
$var wire 32 G" addr_i [31:0] $end
$var integer 32 H" i [31:0] $end
$upscope $end
$scope module ImmGen $end
$var wire 32 I" instr_i [31:0] $end
$var wire 7 J" opcode [6:0] $end
$var wire 3 K" func3 [2:0] $end
$var reg 32 L" Imm_Gen_o [31:0] $end
$upscope $end
$scope module MEMtoWB $end
$var wire 32 M" DM_i [31:0] $end
$var wire 3 N" WB_i [2:0] $end
$var wire 5 O" WBreg_i [4:0] $end
$var wire 32 P" alu_ans_i [31:0] $end
$var wire 1 ! clk_i $end
$var wire 32 Q" pc_add4_i [31:0] $end
$var wire 1 " rst_i $end
$var reg 32 R" DM_o [31:0] $end
$var reg 3 S" WB_o [2:0] $end
$var reg 5 T" WBreg_o [4:0] $end
$var reg 32 U" alu_ans_o [31:0] $end
$var reg 32 V" pc_add4_o [31:0] $end
$upscope $end
$scope module MUX_ALUSrc $end
$var wire 32 W" data1_i [31:0] $end
$var wire 1 X" select_i $end
$var wire 32 Y" data0_i [31:0] $end
$var reg 32 Z" data_o [31:0] $end
$upscope $end
$scope module MUX_ALU_src1 $end
$var wire 32 [" data0_i [31:0] $end
$var wire 32 \" data2_i [31:0] $end
$var wire 2 ]" select_i [1:0] $end
$var wire 32 ^" data1_i [31:0] $end
$var reg 32 _" data_o [31:0] $end
$upscope $end
$scope module MUX_ALU_src2 $end
$var wire 32 `" data0_i [31:0] $end
$var wire 32 a" data2_i [31:0] $end
$var wire 2 b" select_i [1:0] $end
$var wire 32 c" data1_i [31:0] $end
$var reg 32 d" data_o [31:0] $end
$upscope $end
$scope module MUX_MemtoReg $end
$var wire 32 e" data0_i [31:0] $end
$var wire 32 f" data1_i [31:0] $end
$var wire 1 g" select_i $end
$var reg 32 h" data_o [31:0] $end
$upscope $end
$scope module MUX_PCSrc $end
$var wire 32 i" data0_i [31:0] $end
$var wire 1 j" select_i $end
$var wire 32 k" data1_i [31:0] $end
$var reg 32 l" data_o [31:0] $end
$upscope $end
$scope module MUX_control $end
$var wire 32 m" data0_i [31:0] $end
$var wire 32 n" data1_i [31:0] $end
$var wire 1 3 select_i $end
$var reg 32 o" data_o [31:0] $end
$upscope $end
$scope module PC $end
$var wire 1 ) PCWrite $end
$var wire 1 ! clk_i $end
$var wire 32 p" pc_i [31:0] $end
$var wire 1 " rst_i $end
$var reg 32 q" pc_o [31:0] $end
$upscope $end
$scope module PC_plus_4_Adder $end
$var wire 32 r" src1_i [31:0] $end
$var wire 32 s" src2_i [31:0] $end
$var reg 32 t" sum_o [31:0] $end
$upscope $end
$scope module RF $end
$var wire 5 u" RDaddr_i [4:0] $end
$var wire 32 v" RDdata_i [31:0] $end
$var wire 5 w" RSaddr_i [4:0] $end
$var wire 32 x" RSdata_o [31:0] $end
$var wire 5 y" RTaddr_i [4:0] $end
$var wire 32 z" RTdata_o [31:0] $end
$var wire 1 {" RegWrite_i $end
$var wire 1 ! clk_i $end
$var wire 1 " rst_i $end
$var reg 1 W branch_o $end
$upscope $end
$scope module SL1 $end
$var wire 32 |" data_i [31:0] $end
$var reg 32 }" data_o [31:0] $end
$upscope $end
$scope module alu $end
$var wire 4 ~" ALU_control [3:0] $end
$var wire 1 " rst_n $end
$var wire 32 !# src1 [31:0] $end
$var wire 32 "# src2 [31:0] $end
$var reg 32 ## result [31:0] $end
$var reg 1 Y zero $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 ##
bx "#
bx !#
bx ~"
bx }"
bx |"
x{"
bx z"
bx y"
bx x"
bx w"
bx v"
bx u"
bx t"
b100 s"
bx r"
bx q"
bx p"
b0xxxxxxxx o"
b0 n"
b0xxxxxxxx m"
bx l"
bx k"
xj"
bx i"
bx h"
xg"
bx f"
bx e"
bx d"
bx c"
bx b"
bx a"
bx `"
bx _"
bx ^"
bx ]"
bx \"
bx ["
bx Z"
bx Y"
xX"
bx W"
bx V"
bx U"
bx T"
bx S"
bx R"
bx Q"
bx P"
bx O"
bx N"
bx M"
bx L"
bx K"
bx J"
bx I"
b100000 H"
bx G"
bx F"
bx E"
bx D"
bx C"
bx B"
bx A"
bx @"
bx ?"
bx >"
bx ="
bx <"
bx ;"
bx :"
bx 9"
bx 8"
bx 7"
bx 6"
bx 5"
bx 4"
bx 3"
bx 2"
bx 1"
bx 0"
bx /"
bx ."
bx -"
bx ,"
bx +"
bx *"
bx )"
x("
bx '"
bx &"
bx %"
bx $"
bx #"
bx ""
bx !"
bx ~
bx }
bx |
bx {
bx z
bx y
bx x
bx w
bx v
bx u
bx t
b0 s
bx r
bx q
bx p
bx o
bx n
bx m
b10000000 l
bx k
bx j
bx i
xh
xg
bx f
bx e
bx d
bx c
bx b
bx a
bx `
bx _
b0 ^
x]
bx \
bx [
bx Z
0Y
xX
xW
bx V
bx U
bx T
bx S
bx R
bx Q
bx P
bx O
xN
bx M
bx L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
xA
bx @
bx ?
bx >
bx =
x<
bx ;
x:
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
x3
bx 2
bx 1
x0
x/
x.
bx -
bx ,
bx +
bx *
x)
bx (
bx '
x&
bx %
b10000000000000000000000000000011 $
b0 #
0"
0!
$end
#25000
b100 +
b100 l"
b100 p"
b10 ."
b0 -"
b1 ,"
1j"
b1000001 1
0A
b1000001 o"
b0 [
b0 p
b0 d"
b0 "#
b0 _
b0 o
1]
0/
00
0.
0:
0X
b1000001 m"
1&
b0 4
b0 Z"
b0 `"
b100 -
b100 q
b100 @"
b100 k"
b100 t"
03
1<
1)
b10 Z
b10 c
b10 ~"
b0 \
b0 _"
b0 !#
b0 2
b0 ^"
b0 c"
b0 h"
b0 v"
b0 J"
b0 K"
b0 m
b0 /"
b0 0"
b0 '
b0 4"
b0 Y"
b0 z"
b0 y"
b0 (
b0 5"
b0 x"
b0 w"
b0 *"
b0 )"
b0 b
b0 `
0X"
0("
b0 ""
b0 !"
b0 V
b0 i
b0 M"
0h
0g
b0 ~
b0 L
b0 '"
b0 b"
b0 M
b0 &"
b0 ]"
0g"
b0 #"
0{"
b100000000000000011101111 @
b100000000000000011101111 A"
b100000000000000011101111 F"
b0 *
b0 d
b0 B"
b0 G"
b0 q"
b0 r"
b0 >
b0 1"
b0 E"
b0 ?
b0 n
b0 2"
b0 D"
b0 I"
b0 =
b0 C"
b0 E
b0 ?"
b0 I
b0 t
b0 %"
b0 +"
b0 9"
b0 H
b0 a
b0 :"
b0 J
b0 ="
b0 C
b0 <"
b0 D
b0 ;"
b0 ["
b0 K
b0 6"
b0 F
b0 v
b0 7"
b0 B
b0 u
b0 8"
b0 G
b0 r
b0 >"
b0 Q
b0 |
b0 Q"
b0 T
b0 y
b0 O"
b0 P
b0 j
b0 }
b0 P"
b0 U
b0 k
b0 z
b0 \"
b0 a"
0N
b0 R
b0 w
b0 O
b0 x
b0 N"
b0 S
b0 {
b0 6
b0 V"
b0 7
b0 $"
b0 T"
b0 u"
b0 9
b0 U"
b0 e"
b0 8
b0 R"
b0 f"
b0 5
b0 S"
b1 #
1!
#50000
1W
1Y
0!
1"
#75000
0Y
b1000 ^
b1000 s
b1000 ##
b10100 ,
b10100 f
b10100 i"
b11 ."
b10 ,"
0j"
b1100010 1
b1000 [
b1000 p
b1000 d"
b1000 "#
b10000 %
b10000 e
b10000 }"
1A
b1100010 o"
b10100 +
b10100 l"
b10100 p"
b1000 4
b1000 Z"
b1000 `"
b1000 ;
b1000 3"
b1000 L"
b1000 W"
b1000 |"
b1 _
b1 o
0]
b1100010 m"
1:
b1000 -
b1000 q
b1000 @"
b1000 k"
b1000 t"
1X"
b1101111 J"
b1101111 m
b1 /"
b1000 y"
b1000 *"
b100 Q
b100 |
b100 Q"
1N
bx J
bx ="
b1 K
b1 6"
b10 B
b10 u
b10 8"
b100 >
b100 1"
b100 E"
b100000000000000011101111 ?
b100000000000000011101111 n
b100000000000000011101111 2"
b100000000000000011101111 D"
b100000000000000011101111 I"
b10100100000001000010011 @
b10100100000001000010011 A"
b10100100000001000010011 F"
b100 *
b100 d
b100 B"
b100 G"
b100 q"
b100 r"
b10 #
1!
#100000
0!
#125000
1Y
b10 ."
b1 ,"
1j"
b1000001 1
0A
b1000001 o"
b0 ^
b0 s
b0 ##
b0 [
b0 p
b0 d"
b0 "#
b11000 +
b11000 l"
b11000 p"
b0 %
b0 e
b0 }"
b0 _
b0 o
1]
b1000001 m"
0:
b110 Z
b110 c
b110 ~"
b0 4
b0 Z"
b0 `"
b10100 ,
b10100 f
b10100 i"
b11000 -
b11000 q
b11000 @"
b11000 k"
b11000 t"
b0 ;
b0 3"
b0 L"
b0 W"
b0 |"
b0 J"
b0 m
b0 /"
b0 y"
b0 *"
b1 `
0X"
b1000 ""
b10 ~
b0 @
b0 A"
b0 F"
b10100 *
b10100 d
b10100 B"
b10100 G"
b10100 q"
b10100 r"
b0 >
b0 1"
b0 E"
b0 ?
b0 n
b0 2"
b0 D"
b0 I"
b100 E
b100 ?"
b1 I
b1 t
b1 %"
b1 +"
b1 9"
b1000 J
b1000 ="
b10 K
b10 6"
b11 B
b11 u
b11 8"
b100000000000000011101111 G
b100000000000000011101111 r
b100000000000000011101111 >"
b1000 Q
b1000 |
b1000 Q"
b1000 P
b1000 j
b1000 }
b1000 P"
b1000 U
b1000 k
b1000 z
b1000 \"
b1000 a"
0N
b10 O
b10 x
b10 N"
b100 6
b100 V"
b11 #
1!
#150000
0!
#175000
b11100 +
b11100 l"
b11100 p"
b10 Z
b10 c
b10 ~"
b1000 2
b1000 ^"
b1000 c"
b1000 h"
b1000 v"
b11000 ,
b11000 f
b11000 i"
b11100 -
b11100 q
b11100 @"
b11100 k"
b11100 t"
b10 #"
1{"
b11 ~
b0 `
1X"
b0 ""
b1000 6
b1000 V"
b1000 9
b1000 U"
b1000 e"
b10 5
b10 S"
b11000 Q
b11000 |
b11000 Q"
b1 T
b1 y
b1 O"
b0 P
b0 j
b0 }
b0 P"
b0 U
b0 k
b0 z
b0 \"
b0 a"
1N
b11 O
b11 x
b11 N"
b100000000000000011101111 S
b100000000000000011101111 {
b0 E
b0 ?"
b0 I
b0 t
b0 %"
b0 +"
b0 9"
b0 J
b0 ="
b1 K
b1 6"
b10 B
b10 u
b10 8"
b0 G
b0 r
b0 >"
b11000 >
b11000 1"
b11000 E"
b10100 =
b10100 C"
b11000 *
b11000 d
b11000 B"
b11000 G"
b11000 q"
b11000 r"
b100 #
1!
#200000
b1000 (
b1000 5"
b1000 x"
b1000 '
b1000 4"
b1000 Y"
b1000 z"
0!
#225000
0Y
b100000 +
b100000 l"
b100000 p"
b1000 ^
b1000 s
b1000 ##
b11100 ,
b11100 f
b11100 i"
b100000 -
b100000 q
b100000 @"
b100000 k"
b100000 t"
b1000 \
b1000 _"
b1000 !#
b0 2
b0 ^"
b0 c"
b0 h"
b0 v"
b10 ~
b11 #"
b11100 *
b11100 d
b11100 B"
b11100 G"
b11100 q"
b11100 r"
b11100 >
b11100 1"
b11100 E"
b11000 =
b11000 C"
b11000 E
b11000 ?"
b1000 C
b1000 <"
b1000 D
b1000 ;"
b1000 ["
b11100 Q
b11100 |
b11100 Q"
b0 T
b0 y
b0 O"
b10 O
b10 x
b10 N"
b0 S
b0 {
b11000 6
b11000 V"
b1 7
b1 $"
b1 T"
b1 u"
b0 9
b0 U"
b0 e"
b11 5
b11 S"
b101 #
1!
#250000
0!
#275000
b100100 +
b100100 l"
b100100 p"
b100000 ,
b100000 f
b100000 i"
b100100 -
b100100 q
b100100 @"
b100100 k"
b100100 t"
b10 #"
b11100 6
b11100 V"
b0 7
b0 $"
b0 T"
b0 u"
b10 5
b10 S"
b100000 Q
b100000 |
b100000 Q"
b1000 U
b1000 k
b1000 z
b1000 \"
b1000 a"
0N
b11100 E
b11100 ?"
b100000 >
b100000 1"
b100000 E"
b11100 =
b11100 C"
b100000 *
b100000 d
b100000 B"
b100000 G"
b100000 q"
b100000 r"
b110 #
1!
#300000
b0 (
b0 5"
b0 x"
b0 '
b0 4"
b0 Y"
b0 z"
0!
#325000
1Y
b101000 +
b101000 l"
b101000 p"
b0 ^
b0 s
b0 ##
b100100 ,
b100100 f
b100100 i"
b101000 -
b101000 q
b101000 @"
b101000 k"
b101000 t"
b0 \
b0 _"
b0 !#
b100100 *
b100100 d
b100100 B"
b100100 G"
b100100 q"
b100100 r"
b100100 >
b100100 1"
b100100 E"
b100000 =
b100000 C"
b100000 E
b100000 ?"
b0 C
b0 <"
b0 D
b0 ;"
b0 ["
b100100 Q
b100100 |
b100100 Q"
b100000 6
b100000 V"
b111 #
1!
#350000
0!
#375000
b101100 +
b101100 l"
b101100 p"
b101000 ,
b101000 f
b101000 i"
b101100 -
b101100 q
b101100 @"
b101100 k"
b101100 t"
b100100 6
b100100 V"
b101000 Q
b101000 |
b101000 Q"
b0 U
b0 k
b0 z
b0 \"
b0 a"
1N
b100100 E
b100100 ?"
b101000 >
b101000 1"
b101000 E"
b100100 =
b100100 C"
b101000 *
b101000 d
b101000 B"
b101000 G"
b101000 q"
b101000 r"
b1000 #
1!
#400000
0!
#425000
b110000 +
b110000 l"
b110000 p"
b101100 ,
b101100 f
b101100 i"
b110000 -
b110000 q
b110000 @"
b110000 k"
b110000 t"
b101100 *
b101100 d
b101100 B"
b101100 G"
b101100 q"
b101100 r"
b101100 >
b101100 1"
b101100 E"
b101000 =
b101000 C"
b101000 E
b101000 ?"
b101100 Q
b101100 |
b101100 Q"
b101000 6
b101000 V"
b1001 #
1!
#450000
0!
#475000
b110100 +
b110100 l"
b110100 p"
b110000 ,
b110000 f
b110000 i"
b110100 -
b110100 q
b110100 @"
b110100 k"
b110100 t"
b101100 6
b101100 V"
b110000 Q
b110000 |
b110000 Q"
b101100 E
b101100 ?"
b110000 >
b110000 1"
b110000 E"
b101100 =
b101100 C"
b110000 *
b110000 d
b110000 B"
b110000 G"
b110000 q"
b110000 r"
b1010 #
1!
#500000
0!
#525000
b111000 +
b111000 l"
b111000 p"
b110100 ,
b110100 f
b110100 i"
b111000 -
b111000 q
b111000 @"
b111000 k"
b111000 t"
b110100 *
b110100 d
b110100 B"
b110100 G"
b110100 q"
b110100 r"
b110100 >
b110100 1"
b110100 E"
b110000 =
b110000 C"
b110000 E
b110000 ?"
b110100 Q
b110100 |
b110100 Q"
b110000 6
b110000 V"
b1011 #
1!
#550000
0!
#575000
b111100 +
b111100 l"
b111100 p"
b111000 ,
b111000 f
b111000 i"
b111100 -
b111100 q
b111100 @"
b111100 k"
b111100 t"
b110100 6
b110100 V"
b111000 Q
b111000 |
b111000 Q"
b110100 E
b110100 ?"
b111000 >
b111000 1"
b111000 E"
b110100 =
b110100 C"
b111000 *
b111000 d
b111000 B"
b111000 G"
b111000 q"
b111000 r"
b1100 #
1!
#600000
0!
#625000
b1000000 +
b1000000 l"
b1000000 p"
b111100 ,
b111100 f
b111100 i"
b1000000 -
b1000000 q
b1000000 @"
b1000000 k"
b1000000 t"
b111100 *
b111100 d
b111100 B"
b111100 G"
b111100 q"
b111100 r"
b111100 >
b111100 1"
b111100 E"
b111000 =
b111000 C"
b111000 E
b111000 ?"
b111100 Q
b111100 |
b111100 Q"
b111000 6
b111000 V"
b1101 #
1!
#650000
0!
#675000
b1000100 +
b1000100 l"
b1000100 p"
b1000000 ,
b1000000 f
b1000000 i"
b1000100 -
b1000100 q
b1000100 @"
b1000100 k"
b1000100 t"
b111100 6
b111100 V"
b1000000 Q
b1000000 |
b1000000 Q"
b111100 E
b111100 ?"
b1000000 >
b1000000 1"
b1000000 E"
b111100 =
b111100 C"
b1000000 *
b1000000 d
b1000000 B"
b1000000 G"
b1000000 q"
b1000000 r"
b1110 #
1!
#700000
0!
#725000
b1001000 +
b1001000 l"
b1001000 p"
b1000100 ,
b1000100 f
b1000100 i"
b1001000 -
b1001000 q
b1001000 @"
b1001000 k"
b1001000 t"
b1000100 *
b1000100 d
b1000100 B"
b1000100 G"
b1000100 q"
b1000100 r"
b1000100 >
b1000100 1"
b1000100 E"
b1000000 =
b1000000 C"
b1000000 E
b1000000 ?"
b1000100 Q
b1000100 |
b1000100 Q"
b1000000 6
b1000000 V"
b1111 #
1!
#750000
0!
#775000
b1001100 +
b1001100 l"
b1001100 p"
b1001000 ,
b1001000 f
b1001000 i"
b1001100 -
b1001100 q
b1001100 @"
b1001100 k"
b1001100 t"
b1000100 6
b1000100 V"
b1001000 Q
b1001000 |
b1001000 Q"
b1000100 E
b1000100 ?"
b1001000 >
b1001000 1"
b1001000 E"
b1000100 =
b1000100 C"
b1001000 *
b1001000 d
b1001000 B"
b1001000 G"
b1001000 q"
b1001000 r"
b10000 #
1!
#800000
0!
#825000
b1010000 +
b1010000 l"
b1010000 p"
b1001100 ,
b1001100 f
b1001100 i"
b1010000 -
b1010000 q
b1010000 @"
b1010000 k"
b1010000 t"
b1001100 *
b1001100 d
b1001100 B"
b1001100 G"
b1001100 q"
b1001100 r"
b1001100 >
b1001100 1"
b1001100 E"
b1001000 =
b1001000 C"
b1001000 E
b1001000 ?"
b1001100 Q
b1001100 |
b1001100 Q"
b1001000 6
b1001000 V"
b10001 #
1!
#850000
0!
#875000
b1010100 +
b1010100 l"
b1010100 p"
b1010000 ,
b1010000 f
b1010000 i"
b1010100 -
b1010100 q
b1010100 @"
b1010100 k"
b1010100 t"
b1001100 6
b1001100 V"
b1010000 Q
b1010000 |
b1010000 Q"
b1001100 E
b1001100 ?"
b1010000 >
b1010000 1"
b1010000 E"
b1001100 =
b1001100 C"
b1010000 *
b1010000 d
b1010000 B"
b1010000 G"
b1010000 q"
b1010000 r"
b10010 #
1!
#900000
0!
#925000
b1011000 +
b1011000 l"
b1011000 p"
b1010100 ,
b1010100 f
b1010100 i"
b1011000 -
b1011000 q
b1011000 @"
b1011000 k"
b1011000 t"
b1010100 *
b1010100 d
b1010100 B"
b1010100 G"
b1010100 q"
b1010100 r"
b1010100 >
b1010100 1"
b1010100 E"
b1010000 =
b1010000 C"
b1010000 E
b1010000 ?"
b1010100 Q
b1010100 |
b1010100 Q"
b1010000 6
b1010000 V"
b10011 #
1!
#950000
0!
#975000
b1011100 +
b1011100 l"
b1011100 p"
b1011000 ,
b1011000 f
b1011000 i"
b1011100 -
b1011100 q
b1011100 @"
b1011100 k"
b1011100 t"
b1010100 6
b1010100 V"
b1011000 Q
b1011000 |
b1011000 Q"
b1010100 E
b1010100 ?"
b1011000 >
b1011000 1"
b1011000 E"
b1010100 =
b1010100 C"
b1011000 *
b1011000 d
b1011000 B"
b1011000 G"
b1011000 q"
b1011000 r"
b10100 #
1!
#1000000
0!
#1025000
b1100000 +
b1100000 l"
b1100000 p"
b1011100 ,
b1011100 f
b1011100 i"
b1100000 -
b1100000 q
b1100000 @"
b1100000 k"
b1100000 t"
b1011100 *
b1011100 d
b1011100 B"
b1011100 G"
b1011100 q"
b1011100 r"
b1011100 >
b1011100 1"
b1011100 E"
b1011000 =
b1011000 C"
b1011000 E
b1011000 ?"
b1011100 Q
b1011100 |
b1011100 Q"
b1011000 6
b1011000 V"
b10101 #
1!
#1050000
0!
#1075000
b1100100 +
b1100100 l"
b1100100 p"
b1100000 ,
b1100000 f
b1100000 i"
b1100100 -
b1100100 q
b1100100 @"
b1100100 k"
b1100100 t"
b1011100 6
b1011100 V"
b1100000 Q
b1100000 |
b1100000 Q"
b1011100 E
b1011100 ?"
b1100000 >
b1100000 1"
b1100000 E"
b1011100 =
b1011100 C"
b1100000 *
b1100000 d
b1100000 B"
b1100000 G"
b1100000 q"
b1100000 r"
b10110 #
1!
#1100000
0!
#1125000
b1101000 +
b1101000 l"
b1101000 p"
b1100100 ,
b1100100 f
b1100100 i"
b1101000 -
b1101000 q
b1101000 @"
b1101000 k"
b1101000 t"
b1100100 *
b1100100 d
b1100100 B"
b1100100 G"
b1100100 q"
b1100100 r"
b1100100 >
b1100100 1"
b1100100 E"
b1100000 =
b1100000 C"
b1100000 E
b1100000 ?"
b1100100 Q
b1100100 |
b1100100 Q"
b1100000 6
b1100000 V"
b10111 #
1!
#1150000
0!
#1175000
b1101100 +
b1101100 l"
b1101100 p"
b1101000 ,
b1101000 f
b1101000 i"
b1101100 -
b1101100 q
b1101100 @"
b1101100 k"
b1101100 t"
b1100100 6
b1100100 V"
b1101000 Q
b1101000 |
b1101000 Q"
b1100100 E
b1100100 ?"
b1101000 >
b1101000 1"
b1101000 E"
b1100100 =
b1100100 C"
b1101000 *
b1101000 d
b1101000 B"
b1101000 G"
b1101000 q"
b1101000 r"
b11000 #
1!
#1200000
0!
#1225000
b1110000 +
b1110000 l"
b1110000 p"
b1101100 ,
b1101100 f
b1101100 i"
b1110000 -
b1110000 q
b1110000 @"
b1110000 k"
b1110000 t"
b1101100 *
b1101100 d
b1101100 B"
b1101100 G"
b1101100 q"
b1101100 r"
b1101100 >
b1101100 1"
b1101100 E"
b1101000 =
b1101000 C"
b1101000 E
b1101000 ?"
b1101100 Q
b1101100 |
b1101100 Q"
b1101000 6
b1101000 V"
b11001 #
1!
#1250000
0!
#1275000
b1110100 +
b1110100 l"
b1110100 p"
b1110000 ,
b1110000 f
b1110000 i"
b1110100 -
b1110100 q
b1110100 @"
b1110100 k"
b1110100 t"
b1101100 6
b1101100 V"
b1110000 Q
b1110000 |
b1110000 Q"
b1101100 E
b1101100 ?"
b1110000 >
b1110000 1"
b1110000 E"
b1101100 =
b1101100 C"
b1110000 *
b1110000 d
b1110000 B"
b1110000 G"
b1110000 q"
b1110000 r"
b11010 #
1!
#1300000
0!
#1325000
b1111000 +
b1111000 l"
b1111000 p"
b1110100 ,
b1110100 f
b1110100 i"
b1111000 -
b1111000 q
b1111000 @"
b1111000 k"
b1111000 t"
b1110100 *
b1110100 d
b1110100 B"
b1110100 G"
b1110100 q"
b1110100 r"
b1110100 >
b1110100 1"
b1110100 E"
b1110000 =
b1110000 C"
b1110000 E
b1110000 ?"
b1110100 Q
b1110100 |
b1110100 Q"
b1110000 6
b1110000 V"
b11011 #
1!
#1350000
0!
#1375000
b1111100 +
b1111100 l"
b1111100 p"
b1111000 ,
b1111000 f
b1111000 i"
b1111100 -
b1111100 q
b1111100 @"
b1111100 k"
b1111100 t"
b1110100 6
b1110100 V"
b1111000 Q
b1111000 |
b1111000 Q"
b1110100 E
b1110100 ?"
b1111000 >
b1111000 1"
b1111000 E"
b1110100 =
b1110100 C"
b1111000 *
b1111000 d
b1111000 B"
b1111000 G"
b1111000 q"
b1111000 r"
b11100 #
1!
#1400000
0!
#1425000
b10000000 +
b10000000 l"
b10000000 p"
b1111100 ,
b1111100 f
b1111100 i"
b10000000 -
b10000000 q
b10000000 @"
b10000000 k"
b10000000 t"
b1111100 *
b1111100 d
b1111100 B"
b1111100 G"
b1111100 q"
b1111100 r"
b1111100 >
b1111100 1"
b1111100 E"
b1111000 =
b1111000 C"
b1111000 E
b1111000 ?"
b1111100 Q
b1111100 |
b1111100 Q"
b1111000 6
b1111000 V"
b11101 #
1!
#1450000
0!
#1475000
b10000100 +
b10000100 l"
b10000100 p"
b10000000 ,
b10000000 f
b10000000 i"
b10000100 -
b10000100 q
b10000100 @"
b10000100 k"
b10000100 t"
b1111100 6
b1111100 V"
b10000000 Q
b10000000 |
b10000000 Q"
b1111100 E
b1111100 ?"
b10000000 >
b10000000 1"
b10000000 E"
b1111100 =
b1111100 C"
bx @
bx A"
bx F"
b10000000 *
b10000000 d
b10000000 B"
b10000000 G"
b10000000 q"
b10000000 r"
b11110 #
1!
#1500000
0!
#1525000
bx ."
bx -"
bx ,"
xj"
bx 1
xA
b0xxxxxxxx o"
b1000xx00 +
b1000xx00 l"
b1000xx00 p"
bx _
bx o
x]
x/
x0
x.
x:
xX
b0xxxxxxxx m"
x&
b10000100 ,
b10000100 f
b10000100 i"
b10001000 -
b10001000 q
b10001000 @"
b10001000 k"
b10001000 t"
bx J"
bx K"
bx m
bx /"
bx 0"
bx '
bx 4"
bx Y"
bx z"
bx y"
bx (
bx 5"
bx x"
bx w"
bx *"
bx )"
b10000100 *
b10000100 d
b10000100 B"
b10000100 G"
b10000100 q"
b10000100 r"
b10000100 >
b10000100 1"
b10000100 E"
bx ?
bx n
bx 2"
bx D"
bx I"
b10000000 =
b10000000 C"
b10000000 E
b10000000 ?"
b10000100 Q
b10000100 |
b10000100 Q"
b10000000 6
b10000000 V"
b11111 #
1!
#1550000
0X
0W
0!
#1575000
xY
bx [
bx p
bx d"
bx "#
bx ^
bx s
bx ##
bx +
bx l"
bx p"
bx 4
bx Z"
bx `"
bx \
bx _"
bx !#
bx ,
bx f
bx i"
bx -
bx q
bx @"
bx k"
bx t"
bx b
bx `
xX"
x("
bx ""
bx !"
b10000100 6
b10000100 V"
b10001000 Q
b10001000 |
b10001000 Q"
b10000100 E
b10000100 ?"
bx I
bx t
bx %"
bx +"
bx 9"
bx H
bx a
bx :"
bx C
bx <"
bx D
bx ;"
bx ["
bx K
bx 6"
bx F
bx v
bx 7"
bx B
bx u
bx 8"
bx G
bx r
bx >"
b10001000 >
b10001000 1"
b10001000 E"
b10000100 =
b10000100 C"
b1000xx00 *
b1000xx00 d
b1000xx00 B"
b1000xx00 G"
b1000xx00 q"
b1000xx00 r"
b100000 #
1!
#1600000
0!
#1625000
bx V
bx i
bx M"
xh
xg
bx ~
bx *
bx d
bx B"
bx G"
bx q"
bx r"
bx >
bx 1"
bx E"
b1000xx00 =
b1000xx00 C"
b10001000 E
b10001000 ?"
bx Q
bx |
bx Q"
bx T
bx y
bx O"
bx P
bx j
bx }
bx P"
bx U
bx k
bx z
bx \"
bx a"
xN
bx R
bx w
bx O
bx x
bx N"
bx S
bx {
b10001000 6
b10001000 V"
b100001 #
1!
#1650000
0!
#1675000
bx 2
bx ^"
bx c"
bx h"
bx v"
xg"
bx #"
x{"
bx 6
bx V"
bx 7
bx $"
bx T"
bx u"
bx 9
bx U"
bx e"
bx 5
bx S"
bx E
bx ?"
bx =
bx C"
b100010 #
1!
#1700000
0!
#1725000
b100011 #
1!
#1750000
0!
#1775000
b100100 #
1!
#1800000
0!
