$date
	Mon May 23 15:08:11 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module testbench $end
$var reg 1 ! clk $end
$var reg 1 " rst_n $end
$var integer 32 # count [31:0] $end
$var integer 32 $ fp_w [31:0] $end
$scope module CPU $end
$var wire 1 ! clk_i $end
$var wire 1 " rst_i $end
$var wire 32 % SL1_o [31:0] $end
$var wire 1 & RegWrite $end
$var wire 32 ' RTdata_o [31:0] $end
$var wire 32 ( RSdata_o [31:0] $end
$var wire 1 ) PC_write $end
$var wire 32 * PC_o [31:0] $end
$var wire 32 + PC_i [31:0] $end
$var wire 32 , PC_Add_Immediate [31:0] $end
$var wire 32 - PC_Add4 [31:0] $end
$var wire 1 . MemtoReg $end
$var wire 1 / MemWrite $end
$var wire 1 0 MemRead $end
$var wire 8 1 MUX_control_o [7:0] $end
$var wire 32 2 MUXMemtoReg_o [31:0] $end
$var wire 1 3 MUXControl $end
$var wire 32 4 MUXALUSrc_o [31:0] $end
$var wire 3 5 MEMWB_WB_o [2:0] $end
$var wire 32 6 MEMWB_PC_Add4_o [31:0] $end
$var wire 5 7 MEMWB_Instr_11_7_o [4:0] $end
$var wire 32 8 MEMWB_DM_o [31:0] $end
$var wire 32 9 MEMWB_ALUresult_o [31:0] $end
$var wire 1 : Jump $end
$var wire 32 ; Imm_Gen_o [31:0] $end
$var wire 1 < IFID_Write $end
$var wire 32 = IFID_PC_o [31:0] $end
$var wire 32 > IFID_PC_Add4_o [31:0] $end
$var wire 32 ? IFID_Instr_o [31:0] $end
$var wire 32 @ IFID_Instr_i [31:0] $end
$var wire 1 A IFID_Flush $end
$var wire 3 B IDEXE_WB_o [2:0] $end
$var wire 32 C IDEXE_RTdata_o [31:0] $end
$var wire 32 D IDEXE_RSdata_o [31:0] $end
$var wire 32 E IDEXE_PC_add4_o [31:0] $end
$var wire 2 F IDEXE_Mem_o [1:0] $end
$var wire 32 G IDEXE_Instr_o [31:0] $end
$var wire 4 H IDEXE_Instr_30_14_12_o [3:0] $end
$var wire 5 I IDEXE_Instr_11_7_o [4:0] $end
$var wire 32 J IDEXE_ImmGen_o [31:0] $end
$var wire 3 K IDEXE_Exe_o [2:0] $end
$var wire 2 L ForwardB [1:0] $end
$var wire 2 M ForwardA [1:0] $end
$var wire 1 N EXEMEM_Zero_o $end
$var wire 3 O EXEMEM_WB_o [2:0] $end
$var wire 32 P EXEMEM_RTdata_o [31:0] $end
$var wire 32 Q EXEMEM_PC_Add4_o [31:0] $end
$var wire 2 R EXEMEM_Mem_o [1:0] $end
$var wire 32 S EXEMEM_Instr_o [31:0] $end
$var wire 5 T EXEMEM_Instr_11_7_o [4:0] $end
$var wire 32 U EXEMEM_ALUResult_o [31:0] $end
$var wire 32 V DM_o [31:0] $end
$var wire 1 W Branch_zero $end
$var wire 1 X Branch $end
$var wire 1 Y ALU_zero $end
$var wire 4 Z ALU_Ctrl_o [3:0] $end
$var wire 32 [ ALUSrc2_o [31:0] $end
$var wire 32 \ ALUSrc1_o [31:0] $end
$var wire 1 ] ALUSrc $end
$var wire 32 ^ ALUResult [31:0] $end
$var wire 2 _ ALUOp [1:0] $end
$scope module ALU_Ctrl $end
$var wire 4 ` instr [3:0] $end
$var wire 3 a func3 [2:0] $end
$var wire 2 b ALUOp [1:0] $end
$var reg 4 c ALU_Ctrl_o [3:0] $end
$upscope $end
$scope module Branch_Adder $end
$var wire 32 d src2_i [31:0] $end
$var wire 32 e src1_i [31:0] $end
$var reg 32 f sum_o [31:0] $end
$upscope $end
$scope module Data_Memory $end
$var wire 1 ! clk_i $end
$var wire 32 g data_o [31:0] $end
$var wire 32 h data_i [31:0] $end
$var wire 32 i addr_i [31:0] $end
$var wire 1 / MemWrite_i $end
$var wire 1 0 MemRead_i $end
$var integer 32 j i [31:0] $end
$upscope $end
$scope module Decoder $end
$var wire 7 k opcode [6:0] $end
$var wire 32 l instr_i [31:0] $end
$var wire 1 W branch_i $end
$var reg 2 m ALUOp [1:0] $end
$var reg 1 ] ALUSrc $end
$var reg 1 X Branch $end
$var reg 1 A Flush $end
$var reg 1 : Jump $end
$var reg 1 0 MemRead $end
$var reg 1 / MemWrite $end
$var reg 1 . MemtoReg $end
$var reg 1 & RegWrite $end
$upscope $end
$scope module EXEtoMEM $end
$var wire 1 ! clk_i $end
$var wire 1 " rst_i $end
$var wire 1 Y zero_i $end
$var wire 32 n rtdata_i [31:0] $end
$var wire 32 o pc_add4_i [31:0] $end
$var wire 32 p instr_i [31:0] $end
$var wire 32 q alu_ans_i [31:0] $end
$var wire 5 r WBreg_i [4:0] $end
$var wire 3 s WB_i [2:0] $end
$var wire 2 t Mem_i [1:0] $end
$var reg 2 u Mem_o [1:0] $end
$var reg 3 v WB_o [2:0] $end
$var reg 5 w WBreg_o [4:0] $end
$var reg 32 x alu_ans_o [31:0] $end
$var reg 32 y instr_o [31:0] $end
$var reg 32 z pc_add4_o [31:0] $end
$var reg 32 { rtdata_o [31:0] $end
$var reg 1 N zero_o $end
$upscope $end
$scope module FWUnit $end
$var wire 2 | EXEMEM_RegWrite [1:0] $end
$var wire 5 } IDEXE_RS1 [4:0] $end
$var wire 5 ~ IDEXE_RS2 [4:0] $end
$var wire 2 !" MEMWB_RegWrite [1:0] $end
$var wire 5 "" MEMWB_RD [4:0] $end
$var wire 5 #" EXEMEM_RD [4:0] $end
$var reg 2 $" ForwardA [1:0] $end
$var reg 2 %" ForwardB [1:0] $end
$upscope $end
$scope module Hazard_detection_obj $end
$var wire 1 &" IDEXE_memRead $end
$var wire 5 '" IFID_regRs [4:0] $end
$var wire 5 (" IFID_regRt [4:0] $end
$var wire 5 )" IDEXE_regRd [4:0] $end
$var reg 1 < IFID_write $end
$var reg 1 ) PC_write $end
$var reg 1 3 control_output_select $end
$upscope $end
$scope module IDtoEXE $end
$var wire 3 *" Exe_i [2:0] $end
$var wire 2 +" Mem_i [1:0] $end
$var wire 3 ," WB_i [2:0] $end
$var wire 5 -" WBreg_i [4:0] $end
$var wire 4 ." alu_ctrl_instr [3:0] $end
$var wire 1 ! clk_i $end
$var wire 1 " rst_i $end
$var wire 32 /" pc_add4_i [31:0] $end
$var wire 32 0" instr_i [31:0] $end
$var wire 32 1" immgen_i [31:0] $end
$var wire 32 2" data2_i [31:0] $end
$var wire 32 3" data1_i [31:0] $end
$var reg 3 4" Exe_o [2:0] $end
$var reg 2 5" Mem_o [1:0] $end
$var reg 3 6" WB_o [2:0] $end
$var reg 5 7" WBreg_o [4:0] $end
$var reg 4 8" alu_ctrl_input [3:0] $end
$var reg 32 9" data1_o [31:0] $end
$var reg 32 :" data2_o [31:0] $end
$var reg 32 ;" immgen_o [31:0] $end
$var reg 32 <" instr_o [31:0] $end
$var reg 32 =" pc_add4_o [31:0] $end
$upscope $end
$scope module IFtoID $end
$var wire 1 < IFID_write $end
$var wire 1 ! clk_i $end
$var wire 1 A flush $end
$var wire 1 " rst_i $end
$var wire 32 >" pc_add4_i [31:0] $end
$var wire 32 ?" instr_i [31:0] $end
$var wire 32 @" address_i [31:0] $end
$var reg 32 A" address_o [31:0] $end
$var reg 32 B" instr_o [31:0] $end
$var reg 32 C" pc_add4_o [31:0] $end
$upscope $end
$scope module IM $end
$var wire 32 D" instr_o [31:0] $end
$var wire 32 E" addr_i [31:0] $end
$var integer 32 F" i [31:0] $end
$upscope $end
$scope module ImmGen $end
$var wire 32 G" instr_i [31:0] $end
$var wire 7 H" opcode [6:0] $end
$var wire 3 I" func3 [2:0] $end
$var reg 32 J" Imm_Gen_o [31:0] $end
$upscope $end
$scope module MEMtoWB $end
$var wire 32 K" DM_i [31:0] $end
$var wire 3 L" WB_i [2:0] $end
$var wire 5 M" WBreg_i [4:0] $end
$var wire 32 N" alu_ans_i [31:0] $end
$var wire 1 ! clk_i $end
$var wire 32 O" pc_add4_i [31:0] $end
$var wire 1 " rst_i $end
$var reg 32 P" DM_o [31:0] $end
$var reg 3 Q" WB_o [2:0] $end
$var reg 5 R" WBreg_o [4:0] $end
$var reg 32 S" alu_ans_o [31:0] $end
$var reg 32 T" pc_add4_o [31:0] $end
$upscope $end
$scope module MUX_ALUSrc $end
$var wire 32 U" data1_i [31:0] $end
$var wire 1 ] select_i $end
$var wire 32 V" data0_i [31:0] $end
$var reg 32 W" data_o [31:0] $end
$upscope $end
$scope module MUX_ALU_src1 $end
$var wire 32 X" data0_i [31:0] $end
$var wire 32 Y" data2_i [31:0] $end
$var wire 2 Z" select_i [1:0] $end
$var wire 32 [" data1_i [31:0] $end
$var reg 32 \" data_o [31:0] $end
$upscope $end
$scope module MUX_ALU_src2 $end
$var wire 32 ]" data0_i [31:0] $end
$var wire 32 ^" data2_i [31:0] $end
$var wire 2 _" select_i [1:0] $end
$var wire 32 `" data1_i [31:0] $end
$var reg 32 a" data_o [31:0] $end
$upscope $end
$scope module MUX_MemtoReg $end
$var wire 32 b" data0_i [31:0] $end
$var wire 32 c" data1_i [31:0] $end
$var wire 1 . select_i $end
$var reg 32 d" data_o [31:0] $end
$upscope $end
$scope module MUX_PCSrc $end
$var wire 32 e" data0_i [31:0] $end
$var wire 1 f" select_i $end
$var wire 32 g" data1_i [31:0] $end
$var reg 32 h" data_o [31:0] $end
$upscope $end
$scope module MUX_control $end
$var wire 32 i" data0_i [31:0] $end
$var wire 32 j" data1_i [31:0] $end
$var wire 1 3 select_i $end
$var reg 32 k" data_o [31:0] $end
$upscope $end
$scope module PC $end
$var wire 1 ) PCWrite $end
$var wire 1 ! clk_i $end
$var wire 32 l" pc_i [31:0] $end
$var wire 1 " rst_i $end
$var reg 32 m" pc_o [31:0] $end
$upscope $end
$scope module PC_plus_4_Adder $end
$var wire 32 n" src1_i [31:0] $end
$var wire 32 o" src2_i [31:0] $end
$var reg 32 p" sum_o [31:0] $end
$upscope $end
$scope module RF $end
$var wire 5 q" RDaddr_i [4:0] $end
$var wire 32 r" RDdata_i [31:0] $end
$var wire 5 s" RSaddr_i [4:0] $end
$var wire 32 t" RSdata_o [31:0] $end
$var wire 5 u" RTaddr_i [4:0] $end
$var wire 32 v" RTdata_o [31:0] $end
$var wire 1 & RegWrite_i $end
$var wire 1 ! clk_i $end
$var wire 1 " rst_i $end
$var reg 1 W branch_o $end
$upscope $end
$scope module SL1 $end
$var wire 32 w" data_i [31:0] $end
$var reg 32 x" data_o [31:0] $end
$upscope $end
$scope module alu $end
$var wire 4 y" ALU_control [3:0] $end
$var wire 1 z" Zero $end
$var wire 1 " rst_n $end
$var wire 32 {" src1 [31:0] $end
$var wire 32 |" src2 [31:0] $end
$var reg 32 }" result [31:0] $end
$var reg 1 Y zero $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 }"
bx |"
bx {"
1z"
bx y"
bx x"
bx w"
bx v"
bx u"
bx t"
bx s"
bx r"
bx q"
bx p"
b100 o"
bx n"
bx m"
bx l"
b0xxxxxxxx k"
b0 j"
b0xxxxxxxx i"
bx h"
bx g"
xf"
bx e"
bx d"
bx c"
bx b"
bx a"
bx `"
bx _"
bx ^"
bx ]"
bx \"
bx ["
bx Z"
bx Y"
bx X"
bx W"
bx V"
bx U"
bx T"
bx S"
bx R"
bx Q"
bx P"
bx O"
bx N"
bx M"
bx L"
bx K"
bx J"
bx I"
bx H"
bx G"
b100000 F"
bx E"
bx D"
bx C"
bx B"
bx A"
bx @"
bx ?"
bx >"
bx ="
bx <"
bx ;"
bx :"
bx 9"
bx 8"
bx 7"
bx 6"
bx 5"
bx 4"
bx 3"
bx 2"
bx 1"
bx 0"
bx /"
bx ."
bx -"
bx ,"
bx +"
bx *"
bx )"
bx ("
bx '"
x&"
bx %"
bx $"
bx #"
bx ""
bx !"
bx ~
bx }
bx |
bx {
bx z
bx y
bx x
bx w
bx v
bx u
bx t
bx s
bx r
b0 q
bx p
bx o
bx n
bx m
bx l
bx k
b10000000 j
bx i
bx h
bx g
bx f
bx e
bx d
bx c
bx b
bx a
bx `
bx _
b0 ^
x]
bx \
bx [
bx Z
xY
xX
xW
bx V
bx U
bx T
bx S
bx R
bx Q
bx P
bx O
xN
bx M
bx L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
xA
bx @
bx ?
bx >
bx =
x<
bx ;
x:
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
x3
bx 2
bx 1
x0
x/
x.
bx -
bx ,
bx +
bx *
x)
bx (
bx '
x&
bx %
b10000000000000000000000000000011 $
b0 #
0"
0!
$end
#25000
b100 +
b100 h"
b100 l"
b10 ,"
b0 +"
b1 *"
1f"
b1000001 1
b10 Z
b10 c
b10 y"
0A
b1000001 k"
b0 _
b0 b
b0 m
1]
0/
00
0.
0:
0X
b1000001 i"
1&
b100 -
b100 o
b100 >"
b100 g"
b100 p"
03
1<
1)
b0 \
b0 \"
b0 {"
b0 2
b0 ["
b0 `"
b0 d"
b0 r"
b0 H"
b0 I"
b0 k
b0 -"
b0 ."
b0 '
b0 2"
b0 V"
b0 v"
b0 u"
b0 (
b0 3"
b0 t"
b0 s"
b0 ("
b0 '"
b0 a
0&"
b0 ~
b0 }
b0 V
b0 g
b0 |
b0 L
b0 %"
b0 _"
b0 M
b0 $"
b0 Z"
b0 !"
b100000000000000011101111 @
b100000000000000011101111 ?"
b100000000000000011101111 D"
b0 *
b0 d
b0 @"
b0 E"
b0 m"
b0 n"
b0 >
b0 /"
b0 C"
b0 ?
b0 l
b0 0"
b0 B"
b0 G"
b0 =
b0 A"
b0 E
b0 ="
b0 I
b0 r
b0 #"
b0 )"
b0 7"
b0 H
b0 `
b0 8"
b0 J
b0 ;"
b0 C
b0 :"
b0 D
b0 9"
b0 X"
b0 K
b0 4"
b0 F
b0 t
b0 5"
b0 B
b0 s
b0 6"
b0 G
b0 p
b0 <"
b0 Q
b0 z
b0 O"
b0 T
b0 w
b0 M"
b0 P
b0 h
b0 {
b0 K"
b0 U
b0 i
b0 x
b0 N"
b0 Y"
b0 ^"
0N
b0 R
b0 u
b0 O
b0 v
b0 L"
b0 S
b0 y
b0 6
b0 T"
b0 7
b0 ""
b0 R"
b0 q"
b0 9
b0 S"
b0 b"
b0 8
b0 P"
b0 c"
b0 5
b0 Q"
b1 #
1!
#50000
xz"
1W
bx ^
bx q
bx }"
0!
1"
#75000
1z"
b0 ^
b0 q
b0 }"
b10100 ,
b10100 f
b10100 e"
b0 [
b0 n
b0 a"
b0 |"
b11 ,"
b10 *"
0f"
b1100010 1
b10000 %
b10000 e
b10000 x"
b110 Z
b110 c
b110 y"
b0 4
b0 W"
b0 ]"
1A
b1100010 k"
b10100 +
b10100 h"
b10100 l"
b1000 ;
b1000 1"
b1000 J"
b1000 U"
b1000 w"
b1 _
b1 b
b1 m
0]
b1100010 i"
1:
b1000 -
b1000 o
b1000 >"
b1000 g"
b1000 p"
b1101111 H"
b1101111 k
b1 -"
b1000 u"
b1000 ("
b100 Q
b100 z
b100 O"
bx P
bx h
bx {
bx K"
bx U
bx i
bx x
bx N"
bx Y"
bx ^"
xN
bx J
bx ;"
b1 K
b1 4"
b10 B
b10 s
b10 6"
b100 >
b100 /"
b100 C"
b100000000000000011101111 ?
b100000000000000011101111 l
b100000000000000011101111 0"
b100000000000000011101111 B"
b100000000000000011101111 G"
b10100100000001000010011 @
b10100100000001000010011 ?"
b10100100000001000010011 D"
b100 *
b100 d
b100 @"
b100 E"
b100 m"
b100 n"
b10 #
1!
#100000
0!
#125000
b10 ,"
b1 *"
1f"
b1000001 1
b10 Z
b10 c
b10 y"
0A
b1000001 k"
b11000 +
b11000 h"
b11000 l"
b0 %
b0 e
b0 x"
b0 _
b0 b
b0 m
1]
b1000001 i"
0:
b10100 ,
b10100 f
b10100 e"
b11000 -
b11000 o
b11000 >"
b11000 g"
b11000 p"
b0 ;
b0 1"
b0 J"
b0 U"
b0 w"
bx 2
bx ["
bx `"
bx d"
bx r"
b0 H"
b0 k
b0 -"
b0 u"
b0 ("
b1000 ~
b10 |
b0 @
b0 ?"
b0 D"
b10100 *
b10100 d
b10100 @"
b10100 E"
b10100 m"
b10100 n"
b0 >
b0 /"
b0 C"
b0 ?
b0 l
b0 0"
b0 B"
b0 G"
b100 E
b100 ="
b1 I
b1 r
b1 #"
b1 )"
b1 7"
b1000 J
b1000 ;"
b10 K
b10 4"
b11 B
b11 s
b11 6"
b100000000000000011101111 G
b100000000000000011101111 p
b100000000000000011101111 <"
b1000 Q
b1000 z
b1000 O"
b0 P
b0 h
b0 {
b0 K"
b0 U
b0 i
b0 x
b0 N"
b0 Y"
b0 ^"
b10 O
b10 v
b10 L"
b100 6
b100 T"
bx 9
bx S"
bx b"
b11 #
1!
#150000
bx (
bx 3"
bx t"
bx '
bx 2"
bx V"
bx v"
0!
#175000
xz"
bx ^
bx q
bx }"
b11100 +
b11100 h"
b11100 l"
b0 2
b0 ["
b0 `"
b0 d"
b0 r"
bx \
bx \"
bx {"
b11000 ,
b11000 f
b11000 e"
b11100 -
b11100 o
b11100 >"
b11100 g"
b11100 p"
b10 !"
b11 |
b0 ~
b1000 6
b1000 T"
b0 9
b0 S"
b0 b"
b10 5
b10 Q"
b11000 Q
b11000 z
b11000 O"
b1 T
b1 w
b1 M"
b11 O
b11 v
b11 L"
b100000000000000011101111 S
b100000000000000011101111 y
b0 E
b0 ="
b0 I
b0 r
b0 #"
b0 )"
b0 7"
b0 J
b0 ;"
bx C
bx :"
bx D
bx 9"
bx X"
b1 K
b1 4"
b10 B
b10 s
b10 6"
b0 G
b0 p
b0 <"
b11000 >
b11000 /"
b11000 C"
b10100 =
b10100 A"
b11000 *
b11000 d
b11000 @"
b11000 E"
b11000 m"
b11000 n"
b100 #
1!
#200000
0W
b0 (
b0 3"
b0 t"
b0 '
b0 2"
b0 V"
b0 v"
0!
#225000
1z"
b100000 +
b100000 h"
b100000 l"
b0 ^
b0 q
b0 }"
b11100 ,
b11100 f
b11100 e"
b100000 -
b100000 o
b100000 >"
b100000 g"
b100000 p"
b0 \
b0 \"
b0 {"
b10 |
b11 !"
b11100 *
b11100 d
b11100 @"
b11100 E"
b11100 m"
b11100 n"
b11100 >
b11100 /"
b11100 C"
b11000 =
b11000 A"
b11000 E
b11000 ="
b0 C
b0 :"
b0 D
b0 9"
b0 X"
b11100 Q
b11100 z
b11100 O"
b0 T
b0 w
b0 M"
bx U
bx i
bx x
bx N"
bx Y"
bx ^"
b10 O
b10 v
b10 L"
b0 S
b0 y
b11000 6
b11000 T"
b1 7
b1 ""
b1 R"
b1 q"
b11 5
b11 Q"
b101 #
1!
#250000
1W
0!
#275000
b100100 +
b100100 h"
b100100 l"
bx 2
bx ["
bx `"
bx d"
bx r"
b100000 ,
b100000 f
b100000 e"
b100100 -
b100100 o
b100100 >"
b100100 g"
b100100 p"
b10 !"
b11100 6
b11100 T"
b0 7
b0 ""
b0 R"
b0 q"
bx 9
bx S"
bx b"
b10 5
b10 Q"
b100000 Q
b100000 z
b100000 O"
b0 U
b0 i
b0 x
b0 N"
b0 Y"
b0 ^"
b11100 E
b11100 ="
b100000 >
b100000 /"
b100000 C"
b11100 =
b11100 A"
b100000 *
b100000 d
b100000 @"
b100000 E"
b100000 m"
b100000 n"
b110 #
1!
#300000
bx (
bx 3"
bx t"
bx '
bx 2"
bx V"
bx v"
0!
#325000
xz"
b101000 +
b101000 h"
b101000 l"
bx ^
bx q
bx }"
b100100 ,
b100100 f
b100100 e"
b101000 -
b101000 o
b101000 >"
b101000 g"
b101000 p"
bx \
bx \"
bx {"
b0 2
b0 ["
b0 `"
b0 d"
b0 r"
b100100 *
b100100 d
b100100 @"
b100100 E"
b100100 m"
b100100 n"
b100100 >
b100100 /"
b100100 C"
b100000 =
b100000 A"
b100000 E
b100000 ="
bx C
bx :"
bx D
bx 9"
bx X"
b100100 Q
b100100 z
b100100 O"
b100000 6
b100000 T"
b0 9
b0 S"
b0 b"
b111 #
1!
#350000
0W
b0 (
b0 3"
b0 t"
b0 '
b0 2"
b0 V"
b0 v"
0!
#375000
1z"
b0 ^
b0 q
b0 }"
b101100 +
b101100 h"
b101100 l"
b0 \
b0 \"
b0 {"
b101000 ,
b101000 f
b101000 e"
b101100 -
b101100 o
b101100 >"
b101100 g"
b101100 p"
b100100 6
b100100 T"
b101000 Q
b101000 z
b101000 O"
bx U
bx i
bx x
bx N"
bx Y"
bx ^"
b100100 E
b100100 ="
b0 C
b0 :"
b0 D
b0 9"
b0 X"
b101000 >
b101000 /"
b101000 C"
b100100 =
b100100 A"
b101000 *
b101000 d
b101000 @"
b101000 E"
b101000 m"
b101000 n"
b1000 #
1!
#400000
1W
0!
#425000
b110000 +
b110000 h"
b110000 l"
b101100 ,
b101100 f
b101100 e"
b110000 -
b110000 o
b110000 >"
b110000 g"
b110000 p"
bx 2
bx ["
bx `"
bx d"
bx r"
b101100 *
b101100 d
b101100 @"
b101100 E"
b101100 m"
b101100 n"
b101100 >
b101100 /"
b101100 C"
b101000 =
b101000 A"
b101000 E
b101000 ="
b101100 Q
b101100 z
b101100 O"
b0 U
b0 i
b0 x
b0 N"
b0 Y"
b0 ^"
b101000 6
b101000 T"
bx 9
bx S"
bx b"
b1001 #
1!
#450000
bx (
bx 3"
bx t"
bx '
bx 2"
bx V"
bx v"
0!
#475000
xz"
bx ^
bx q
bx }"
b110100 +
b110100 h"
b110100 l"
b0 2
b0 ["
b0 `"
b0 d"
b0 r"
bx \
bx \"
bx {"
b110000 ,
b110000 f
b110000 e"
b110100 -
b110100 o
b110100 >"
b110100 g"
b110100 p"
b101100 6
b101100 T"
b0 9
b0 S"
b0 b"
b110000 Q
b110000 z
b110000 O"
b101100 E
b101100 ="
bx C
bx :"
bx D
bx 9"
bx X"
b110000 >
b110000 /"
b110000 C"
b101100 =
b101100 A"
b110000 *
b110000 d
b110000 @"
b110000 E"
b110000 m"
b110000 n"
b1010 #
1!
#500000
0W
b0 (
b0 3"
b0 t"
b0 '
b0 2"
b0 V"
b0 v"
0!
#525000
1z"
b111000 +
b111000 h"
b111000 l"
b0 ^
b0 q
b0 }"
b110100 ,
b110100 f
b110100 e"
b111000 -
b111000 o
b111000 >"
b111000 g"
b111000 p"
b0 \
b0 \"
b0 {"
b110100 *
b110100 d
b110100 @"
b110100 E"
b110100 m"
b110100 n"
b110100 >
b110100 /"
b110100 C"
b110000 =
b110000 A"
b110000 E
b110000 ="
b0 C
b0 :"
b0 D
b0 9"
b0 X"
b110100 Q
b110100 z
b110100 O"
bx U
bx i
bx x
bx N"
bx Y"
bx ^"
b110000 6
b110000 T"
b1011 #
1!
#550000
1W
0!
#575000
b111100 +
b111100 h"
b111100 l"
bx 2
bx ["
bx `"
bx d"
bx r"
b111000 ,
b111000 f
b111000 e"
b111100 -
b111100 o
b111100 >"
b111100 g"
b111100 p"
b110100 6
b110100 T"
bx 9
bx S"
bx b"
b111000 Q
b111000 z
b111000 O"
b0 U
b0 i
b0 x
b0 N"
b0 Y"
b0 ^"
b110100 E
b110100 ="
b111000 >
b111000 /"
b111000 C"
b110100 =
b110100 A"
b111000 *
b111000 d
b111000 @"
b111000 E"
b111000 m"
b111000 n"
b1100 #
1!
#600000
bx (
bx 3"
bx t"
bx '
bx 2"
bx V"
bx v"
0!
#625000
xz"
b1000000 +
b1000000 h"
b1000000 l"
bx ^
bx q
bx }"
b111100 ,
b111100 f
b111100 e"
b1000000 -
b1000000 o
b1000000 >"
b1000000 g"
b1000000 p"
bx \
bx \"
bx {"
b0 2
b0 ["
b0 `"
b0 d"
b0 r"
b111100 *
b111100 d
b111100 @"
b111100 E"
b111100 m"
b111100 n"
b111100 >
b111100 /"
b111100 C"
b111000 =
b111000 A"
b111000 E
b111000 ="
bx C
bx :"
bx D
bx 9"
bx X"
b111100 Q
b111100 z
b111100 O"
b111000 6
b111000 T"
b0 9
b0 S"
b0 b"
b1101 #
1!
#650000
0W
b0 (
b0 3"
b0 t"
b0 '
b0 2"
b0 V"
b0 v"
0!
#675000
1z"
b0 ^
b0 q
b0 }"
b1000100 +
b1000100 h"
b1000100 l"
b0 \
b0 \"
b0 {"
b1000000 ,
b1000000 f
b1000000 e"
b1000100 -
b1000100 o
b1000100 >"
b1000100 g"
b1000100 p"
b111100 6
b111100 T"
b1000000 Q
b1000000 z
b1000000 O"
bx U
bx i
bx x
bx N"
bx Y"
bx ^"
b111100 E
b111100 ="
b0 C
b0 :"
b0 D
b0 9"
b0 X"
b1000000 >
b1000000 /"
b1000000 C"
b111100 =
b111100 A"
b1000000 *
b1000000 d
b1000000 @"
b1000000 E"
b1000000 m"
b1000000 n"
b1110 #
1!
#700000
1W
0!
#725000
b1001000 +
b1001000 h"
b1001000 l"
b1000100 ,
b1000100 f
b1000100 e"
b1001000 -
b1001000 o
b1001000 >"
b1001000 g"
b1001000 p"
bx 2
bx ["
bx `"
bx d"
bx r"
b1000100 *
b1000100 d
b1000100 @"
b1000100 E"
b1000100 m"
b1000100 n"
b1000100 >
b1000100 /"
b1000100 C"
b1000000 =
b1000000 A"
b1000000 E
b1000000 ="
b1000100 Q
b1000100 z
b1000100 O"
b0 U
b0 i
b0 x
b0 N"
b0 Y"
b0 ^"
b1000000 6
b1000000 T"
bx 9
bx S"
bx b"
b1111 #
1!
#750000
bx (
bx 3"
bx t"
bx '
bx 2"
bx V"
bx v"
0!
#775000
xz"
bx ^
bx q
bx }"
b1001100 +
b1001100 h"
b1001100 l"
b0 2
b0 ["
b0 `"
b0 d"
b0 r"
bx \
bx \"
bx {"
b1001000 ,
b1001000 f
b1001000 e"
b1001100 -
b1001100 o
b1001100 >"
b1001100 g"
b1001100 p"
b1000100 6
b1000100 T"
b0 9
b0 S"
b0 b"
b1001000 Q
b1001000 z
b1001000 O"
b1000100 E
b1000100 ="
bx C
bx :"
bx D
bx 9"
bx X"
b1001000 >
b1001000 /"
b1001000 C"
b1000100 =
b1000100 A"
b1001000 *
b1001000 d
b1001000 @"
b1001000 E"
b1001000 m"
b1001000 n"
b10000 #
1!
#800000
0W
b0 (
b0 3"
b0 t"
b0 '
b0 2"
b0 V"
b0 v"
0!
#825000
1z"
b1010000 +
b1010000 h"
b1010000 l"
b0 ^
b0 q
b0 }"
b1001100 ,
b1001100 f
b1001100 e"
b1010000 -
b1010000 o
b1010000 >"
b1010000 g"
b1010000 p"
b0 \
b0 \"
b0 {"
b1001100 *
b1001100 d
b1001100 @"
b1001100 E"
b1001100 m"
b1001100 n"
b1001100 >
b1001100 /"
b1001100 C"
b1001000 =
b1001000 A"
b1001000 E
b1001000 ="
b0 C
b0 :"
b0 D
b0 9"
b0 X"
b1001100 Q
b1001100 z
b1001100 O"
bx U
bx i
bx x
bx N"
bx Y"
bx ^"
b1001000 6
b1001000 T"
b10001 #
1!
#850000
1W
0!
#875000
b1010100 +
b1010100 h"
b1010100 l"
bx 2
bx ["
bx `"
bx d"
bx r"
b1010000 ,
b1010000 f
b1010000 e"
b1010100 -
b1010100 o
b1010100 >"
b1010100 g"
b1010100 p"
b1001100 6
b1001100 T"
bx 9
bx S"
bx b"
b1010000 Q
b1010000 z
b1010000 O"
b0 U
b0 i
b0 x
b0 N"
b0 Y"
b0 ^"
b1001100 E
b1001100 ="
b1010000 >
b1010000 /"
b1010000 C"
b1001100 =
b1001100 A"
b1010000 *
b1010000 d
b1010000 @"
b1010000 E"
b1010000 m"
b1010000 n"
b10010 #
1!
#900000
bx (
bx 3"
bx t"
bx '
bx 2"
bx V"
bx v"
0!
#925000
xz"
b1011000 +
b1011000 h"
b1011000 l"
bx ^
bx q
bx }"
b1010100 ,
b1010100 f
b1010100 e"
b1011000 -
b1011000 o
b1011000 >"
b1011000 g"
b1011000 p"
bx \
bx \"
bx {"
b0 2
b0 ["
b0 `"
b0 d"
b0 r"
b1010100 *
b1010100 d
b1010100 @"
b1010100 E"
b1010100 m"
b1010100 n"
b1010100 >
b1010100 /"
b1010100 C"
b1010000 =
b1010000 A"
b1010000 E
b1010000 ="
bx C
bx :"
bx D
bx 9"
bx X"
b1010100 Q
b1010100 z
b1010100 O"
b1010000 6
b1010000 T"
b0 9
b0 S"
b0 b"
b10011 #
1!
#950000
0W
b0 (
b0 3"
b0 t"
b0 '
b0 2"
b0 V"
b0 v"
0!
#975000
1z"
b0 ^
b0 q
b0 }"
b1011100 +
b1011100 h"
b1011100 l"
b0 \
b0 \"
b0 {"
b1011000 ,
b1011000 f
b1011000 e"
b1011100 -
b1011100 o
b1011100 >"
b1011100 g"
b1011100 p"
b1010100 6
b1010100 T"
b1011000 Q
b1011000 z
b1011000 O"
bx U
bx i
bx x
bx N"
bx Y"
bx ^"
b1010100 E
b1010100 ="
b0 C
b0 :"
b0 D
b0 9"
b0 X"
b1011000 >
b1011000 /"
b1011000 C"
b1010100 =
b1010100 A"
b1011000 *
b1011000 d
b1011000 @"
b1011000 E"
b1011000 m"
b1011000 n"
b10100 #
1!
#1000000
1W
0!
#1025000
b1100000 +
b1100000 h"
b1100000 l"
b1011100 ,
b1011100 f
b1011100 e"
b1100000 -
b1100000 o
b1100000 >"
b1100000 g"
b1100000 p"
bx 2
bx ["
bx `"
bx d"
bx r"
b1011100 *
b1011100 d
b1011100 @"
b1011100 E"
b1011100 m"
b1011100 n"
b1011100 >
b1011100 /"
b1011100 C"
b1011000 =
b1011000 A"
b1011000 E
b1011000 ="
b1011100 Q
b1011100 z
b1011100 O"
b0 U
b0 i
b0 x
b0 N"
b0 Y"
b0 ^"
b1011000 6
b1011000 T"
bx 9
bx S"
bx b"
b10101 #
1!
#1050000
bx (
bx 3"
bx t"
bx '
bx 2"
bx V"
bx v"
0!
#1075000
xz"
bx ^
bx q
bx }"
b1100100 +
b1100100 h"
b1100100 l"
b0 2
b0 ["
b0 `"
b0 d"
b0 r"
bx \
bx \"
bx {"
b1100000 ,
b1100000 f
b1100000 e"
b1100100 -
b1100100 o
b1100100 >"
b1100100 g"
b1100100 p"
b1011100 6
b1011100 T"
b0 9
b0 S"
b0 b"
b1100000 Q
b1100000 z
b1100000 O"
b1011100 E
b1011100 ="
bx C
bx :"
bx D
bx 9"
bx X"
b1100000 >
b1100000 /"
b1100000 C"
b1011100 =
b1011100 A"
b1100000 *
b1100000 d
b1100000 @"
b1100000 E"
b1100000 m"
b1100000 n"
b10110 #
1!
#1100000
0W
b0 (
b0 3"
b0 t"
b0 '
b0 2"
b0 V"
b0 v"
0!
#1125000
1z"
b1101000 +
b1101000 h"
b1101000 l"
b0 ^
b0 q
b0 }"
b1100100 ,
b1100100 f
b1100100 e"
b1101000 -
b1101000 o
b1101000 >"
b1101000 g"
b1101000 p"
b0 \
b0 \"
b0 {"
b1100100 *
b1100100 d
b1100100 @"
b1100100 E"
b1100100 m"
b1100100 n"
b1100100 >
b1100100 /"
b1100100 C"
b1100000 =
b1100000 A"
b1100000 E
b1100000 ="
b0 C
b0 :"
b0 D
b0 9"
b0 X"
b1100100 Q
b1100100 z
b1100100 O"
bx U
bx i
bx x
bx N"
bx Y"
bx ^"
b1100000 6
b1100000 T"
b10111 #
1!
#1150000
1W
0!
#1175000
b1101100 +
b1101100 h"
b1101100 l"
bx 2
bx ["
bx `"
bx d"
bx r"
b1101000 ,
b1101000 f
b1101000 e"
b1101100 -
b1101100 o
b1101100 >"
b1101100 g"
b1101100 p"
b1100100 6
b1100100 T"
bx 9
bx S"
bx b"
b1101000 Q
b1101000 z
b1101000 O"
b0 U
b0 i
b0 x
b0 N"
b0 Y"
b0 ^"
b1100100 E
b1100100 ="
b1101000 >
b1101000 /"
b1101000 C"
b1100100 =
b1100100 A"
b1101000 *
b1101000 d
b1101000 @"
b1101000 E"
b1101000 m"
b1101000 n"
b11000 #
1!
#1200000
bx (
bx 3"
bx t"
bx '
bx 2"
bx V"
bx v"
0!
#1225000
xz"
b1110000 +
b1110000 h"
b1110000 l"
bx ^
bx q
bx }"
b1101100 ,
b1101100 f
b1101100 e"
b1110000 -
b1110000 o
b1110000 >"
b1110000 g"
b1110000 p"
bx \
bx \"
bx {"
b0 2
b0 ["
b0 `"
b0 d"
b0 r"
b1101100 *
b1101100 d
b1101100 @"
b1101100 E"
b1101100 m"
b1101100 n"
b1101100 >
b1101100 /"
b1101100 C"
b1101000 =
b1101000 A"
b1101000 E
b1101000 ="
bx C
bx :"
bx D
bx 9"
bx X"
b1101100 Q
b1101100 z
b1101100 O"
b1101000 6
b1101000 T"
b0 9
b0 S"
b0 b"
b11001 #
1!
#1250000
0W
b0 (
b0 3"
b0 t"
b0 '
b0 2"
b0 V"
b0 v"
0!
#1275000
1z"
b0 ^
b0 q
b0 }"
b1110100 +
b1110100 h"
b1110100 l"
b0 \
b0 \"
b0 {"
b1110000 ,
b1110000 f
b1110000 e"
b1110100 -
b1110100 o
b1110100 >"
b1110100 g"
b1110100 p"
b1101100 6
b1101100 T"
b1110000 Q
b1110000 z
b1110000 O"
bx U
bx i
bx x
bx N"
bx Y"
bx ^"
b1101100 E
b1101100 ="
b0 C
b0 :"
b0 D
b0 9"
b0 X"
b1110000 >
b1110000 /"
b1110000 C"
b1101100 =
b1101100 A"
b1110000 *
b1110000 d
b1110000 @"
b1110000 E"
b1110000 m"
b1110000 n"
b11010 #
1!
#1300000
1W
0!
#1325000
b1111000 +
b1111000 h"
b1111000 l"
b1110100 ,
b1110100 f
b1110100 e"
b1111000 -
b1111000 o
b1111000 >"
b1111000 g"
b1111000 p"
bx 2
bx ["
bx `"
bx d"
bx r"
b1110100 *
b1110100 d
b1110100 @"
b1110100 E"
b1110100 m"
b1110100 n"
b1110100 >
b1110100 /"
b1110100 C"
b1110000 =
b1110000 A"
b1110000 E
b1110000 ="
b1110100 Q
b1110100 z
b1110100 O"
b0 U
b0 i
b0 x
b0 N"
b0 Y"
b0 ^"
b1110000 6
b1110000 T"
bx 9
bx S"
bx b"
b11011 #
1!
#1350000
bx (
bx 3"
bx t"
bx '
bx 2"
bx V"
bx v"
0!
#1375000
xz"
bx ^
bx q
bx }"
b1111100 +
b1111100 h"
b1111100 l"
b0 2
b0 ["
b0 `"
b0 d"
b0 r"
bx \
bx \"
bx {"
b1111000 ,
b1111000 f
b1111000 e"
b1111100 -
b1111100 o
b1111100 >"
b1111100 g"
b1111100 p"
b1110100 6
b1110100 T"
b0 9
b0 S"
b0 b"
b1111000 Q
b1111000 z
b1111000 O"
b1110100 E
b1110100 ="
bx C
bx :"
bx D
bx 9"
bx X"
b1111000 >
b1111000 /"
b1111000 C"
b1110100 =
b1110100 A"
b1111000 *
b1111000 d
b1111000 @"
b1111000 E"
b1111000 m"
b1111000 n"
b11100 #
1!
#1400000
0W
b0 (
b0 3"
b0 t"
b0 '
b0 2"
b0 V"
b0 v"
0!
#1425000
1z"
b10000000 +
b10000000 h"
b10000000 l"
b0 ^
b0 q
b0 }"
b1111100 ,
b1111100 f
b1111100 e"
b10000000 -
b10000000 o
b10000000 >"
b10000000 g"
b10000000 p"
b0 \
b0 \"
b0 {"
b1111100 *
b1111100 d
b1111100 @"
b1111100 E"
b1111100 m"
b1111100 n"
b1111100 >
b1111100 /"
b1111100 C"
b1111000 =
b1111000 A"
b1111000 E
b1111000 ="
b0 C
b0 :"
b0 D
b0 9"
b0 X"
b1111100 Q
b1111100 z
b1111100 O"
bx U
bx i
bx x
bx N"
bx Y"
bx ^"
b1111000 6
b1111000 T"
b11101 #
1!
#1450000
1W
0!
#1475000
b10000100 +
b10000100 h"
b10000100 l"
bx 2
bx ["
bx `"
bx d"
bx r"
b10000000 ,
b10000000 f
b10000000 e"
b10000100 -
b10000100 o
b10000100 >"
b10000100 g"
b10000100 p"
b1111100 6
b1111100 T"
bx 9
bx S"
bx b"
b10000000 Q
b10000000 z
b10000000 O"
b0 U
b0 i
b0 x
b0 N"
b0 Y"
b0 ^"
b1111100 E
b1111100 ="
b10000000 >
b10000000 /"
b10000000 C"
b1111100 =
b1111100 A"
bx @
bx ?"
bx D"
b10000000 *
b10000000 d
b10000000 @"
b10000000 E"
b10000000 m"
b10000000 n"
b11110 #
1!
#1500000
bx (
bx 3"
bx t"
bx '
bx 2"
bx V"
bx v"
0!
#1525000
bx [
bx n
bx a"
bx |"
bx ,"
bx +"
bx *"
xf"
bx 1
xz"
bx 4
bx W"
bx ]"
xA
b0xxxxxxxx k"
b1000xx00 +
b1000xx00 h"
b1000xx00 l"
bx ^
bx q
bx }"
bx _
bx b
bx m
x]
x/
x0
x.
x:
xX
b0xxxxxxxx i"
x&
b10000100 ,
b10000100 f
b10000100 e"
b10001000 -
b10001000 o
b10001000 >"
b10001000 g"
b10001000 p"
bx \
bx \"
bx {"
b0 2
b0 ["
b0 `"
b0 d"
b0 r"
bx H"
bx I"
bx k
bx -"
bx ."
bx u"
bx s"
bx ("
bx '"
b10000100 *
b10000100 d
b10000100 @"
b10000100 E"
b10000100 m"
b10000100 n"
b10000100 >
b10000100 /"
b10000100 C"
bx ?
bx l
bx 0"
bx B"
bx G"
b10000000 =
b10000000 A"
b10000000 E
b10000000 ="
bx C
bx :"
bx D
bx 9"
bx X"
b10000100 Q
b10000100 z
b10000100 O"
b10000000 6
b10000000 T"
b0 9
b0 S"
b0 b"
b11111 #
1!
#1550000
0X
0W
0!
#1575000
bx +
bx h"
bx l"
bx ,
bx f
bx e"
bx -
bx o
bx >"
bx g"
bx p"
bx V
bx g
bx a
x&"
bx ~
bx }
b10000100 6
b10000100 T"
b10001000 Q
b10001000 z
b10001000 O"
bx P
bx h
bx {
bx K"
bx U
bx i
bx x
bx N"
bx Y"
bx ^"
b10000100 E
b10000100 ="
bx I
bx r
bx #"
bx )"
bx 7"
bx H
bx `
bx 8"
bx K
bx 4"
bx F
bx t
bx 5"
bx B
bx s
bx 6"
bx G
bx p
bx <"
b10001000 >
b10001000 /"
b10001000 C"
b10000100 =
b10000100 A"
b1000xx00 *
b1000xx00 d
b1000xx00 @"
b1000xx00 E"
b1000xx00 m"
b1000xx00 n"
b100000 #
1!
#1600000
0!
#1625000
bx 2
bx ["
bx `"
bx d"
bx r"
bx |
bx *
bx d
bx @"
bx E"
bx m"
bx n"
bx >
bx /"
bx C"
b1000xx00 =
b1000xx00 A"
b10001000 E
b10001000 ="
bx Q
bx z
bx O"
bx T
bx w
bx M"
bx R
bx u
bx O
bx v
bx L"
bx S
bx y
b10001000 6
b10001000 T"
bx 9
bx S"
bx b"
b100001 #
1!
#1650000
0!
#1675000
bx !"
bx 6
bx T"
bx 7
bx ""
bx R"
bx q"
bx 5
bx Q"
bx E
bx ="
bx =
bx A"
b100010 #
1!
#1700000
0!
#1725000
b100011 #
1!
#1750000
0!
#1775000
b100100 #
1!
#1800000
0!
